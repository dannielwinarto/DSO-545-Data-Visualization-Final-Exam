glimpse(states_map)
a = states_map %>% filter(region ==  "missouri")
a
library(dplyr)
states_map = map_data("state")
states_map = map_data("country")
states_map = map_data("state")
?map_data
glimpse(states_map)
ggplot(states_map, aes(x = long, y = lat)) + geom_point()
ggplot(states_map, aes(x = long, y = lat)) +
geom_point()
geom_polygon()
ggplot(states_map, aes(x = long, y = lat)) +
geom_polygon()
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon()
geom_polygon( fill = "green")
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "green")
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
ggplot(states_map, aes(x = long, y = lat)) +
geom_line()
ggplot(states_map, aes(x = long, y = lat)) +
geom_point()
ggplot(states_map, aes(x = long, y = lat)) +
geom_point()
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
world_map = map_data("world")
ggplot(world_map, aes(x = long, y = lat)) +
geom_point()
ggplot(world_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
lebanon = map_data("world")
lebanon = map_data("world", region  = "Lebanon")
lebanon
ggplot(lebanon, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
lebanon = map_data("world", region  = "Indonesia")
lebanon
ggplot(lebanon, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
lebanon = map_data("world", region  = "Lebanon")
ggplot(lebanon, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
far_east = map_data("world", region  = c("Japan", "China", "North Korea", "South Korea")
ggplot(far_east, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
far_east = map_data("world", region  = c("Japan", "China", "North Korea", "South Korea")
far_east = map_data("world", region  = c("Japan", "China", "North Korea", "South Korea"))
far_east = map_data("world", region  =
c("Japan", "China"))
far_east = map_data("world", region  =
c("Japan", "China", "North Korea"))
ggplot(far_east, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
far_east = map_data("world", region  =
c("Japan", "China", "North Korea", "South Korea"))
far_east = map_data("world", region  =
c("Japan", "China", "North Korea", "South Korea"))
ggplot(far_east, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
countries = world_map$region
countries
world_map = map_data("world")
countries = world_map %>% distinct(region)
countries
countries = world_map %>% distinct(region) %>% arrange(region)
countries
countries
USAccDeaths
?USAccDeaths
head(USArrests)
head(?USArrests)
?USArrests
head(USArrests)
summary(USArrests)
ncol(USArrests)
head(USArrests)
ncol(USArrests)
ncol(USArrests)[1]
ncol(USArrests)[2]
colnames(USArrests)[2]
colnames(USArrests)[1]
colnames(USArrests)[5]
colnames(USArrests)[5]  =
colnames(USArrests)[5]
colnames(USArrests)[5]
colnames(USArrests)[5]  = "State"
rownames(USArrests)
USArrests%State = rownames(USArrests)
USArrests$State = rownames(USArrests)
head(USArrests)
head(USArrests)
crimes = USArrests
crime$State = rownames(USArrests)
crimes$State = rownames(USArrests)
crimes
ggplot(crimes, aes(x = states,)) + geom_polygon()
ggplot(crimes, aes(x = states)) + geom_polygon()
# Create maps for the usa and the world
library(maps)
library(ggplot2)
# the maps package has information about countries state, counties etc
states_map = map_data("state")
library(dplyr)
glimpse(states_map)
# levels(as.factor(states_map$region))
# a = states_map %>% filter(region ==  "missouri")
states_map = map_data("state")
ggplot(states_map, aes(x = long, y = lat)) +
geom_point()
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
# map of the world
world_map = map_data("world")
ggplot(world_map, aes(x = long, y = lat)) +
geom_point()
ggplot(world_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
# the map_data function can take the following
# world, nz, france, italy, usa, state, county
# get the map for lebanon
lebanon = map_data("world", region  = "Lebanon")
ggplot(lebanon, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
# get the map for far east
far_east = map_data("world", region  =
c("Japan", "China", "North Korea", "South Korea"))
ggplot(far_east, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
# get all country names
world_map = map_data("world")
countries = world_map %>% distinct(region) %>% arrange(region)
states_map = map_data("state")
View(states_map)
View(states_map)
View(crimes)
View(crimes)
crimes_map = merge(states_map, crime, by.x = region, by.y = states)
crimes_map = merge(states_map, crimes, by.x = region, by.y = states)
crimes_map = merge(states_map, #first dataframe
crimes, #2nd dataframe
by.x = "region", #key for first dataframe
by.y = "states") #key for 2nd dataframe
crimes_map = merge(states_map, #first dataframe
crimes, #2nd dataframe
by.x = "region", #key for first dataframe
by.y = "states") #key for 2nd dataframe
crimes_map = merge(states_map, #first dataframe
crimes, #2nd dataframe
by.x = "region", #key for first dataframe
by.y = "States") #key for 2nd dataframe
crimes
head(USArrests)
crimes = USArrests
crimes
crimes$State = rownames(USArrests)
crimes$State
crimes
tolower(crimes$State)
crimes$State = tolower(crimes$State)
crimes
crimes_map = merge(states_map, #first dataframe
crimes, #2nd dataframe
by.x = "region", #key for first dataframe
by.y = "States") #key for 2nd dataframe
crimes_map = merge(states_map, #first dataframe
crimes, #2nd dataframe
by.x = "region", #key for first dataframe
by.y = "State") #key for 2nd dataframe
glimpse(crimes_map)
crimes
glimpse(crimes_map)
ggplot(crimes_map, aes(x = long, y = lat, group = group)) +
geom_polygon()
ggplot(crimes_map, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black"))
ggplot(crimes_map, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group)) +
geom_polygon( fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat)) +
geom_polygon(fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
glimpse(crimes_map)
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon(fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group, color = Murder)) +
geom_polygon(fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group, color = group)) +
geom_polygon(fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = murder)) +
geom_polygon(fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon(fill = "white", color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group)) +
geom_polygon( color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black") + scale_fill_gradient(low = "white", high = "blue")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black") + scale_fill_gradient(low = "white", high = "red")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black") + scale_fill_gradient(low = "white", high = "red")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black") + scale_fill_gradient(low = "white", high = "red")
coord_map("polyconic")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black") + scale_fill_gradient(low = "white", high = "red") +
coord_map("polyconic")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black") + scale_fill_gradient(low = "white", high = "red")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black") + scale_fill_gradient(low = "white", high = "red") +
coord_map("polyconic")
ggplot(crimes_map, aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon( color = "black") + scale_fill_gradient(low = "white", high = "red") +
coord_map("polyconic") +
theme_void()
library(ggmap)
library(maps)
library(ggplot2)
library(dplyr)
USC = "University of Southern California Los Angeles"
USC_map = get_map(location = USC)
USC_map
ggmap(USC_map)
icecream <- read.csv("icecream.csv")
setwd("C:/Users/dan_9/Desktop/DSO 545/Final exam/FINAL")
setwd("C:/Users/dan_9/Desktop/DSO 545/Final exam/FINAL")
icecream <- read.csv("icecream.csv")
library(ggplot2)
library(dplyr)
library(stringr)
library(lubridate)
library(rvest)
install.packages("xml2")
library(ggplot2)
library(dplyr)
library(stringr)
library(lubridate)
library(rvest)
library(ggmap)
library(maps)
world_map = map_data("world")
glimpse(icecream)
glimpse(icecream)
Q1p1 = icecream %>% group_by(Country.or.Area)  %>% summarise(averageSpending)
Q1p1 = icecream %>% group_by(Country.or.Area)  %>% summarise(averageSpending = mean(USDinMillions))
Q1p1
Q1p1
world_map
world_map = map_data("world")
world_map
View(world_map)
View(world_map)
world_map$region = tolower(world_map$region)
Q1p1$Country.or.Area = tolower(Q1p1$Country.or.Area)
Q1p1
merge(world_map,Q1p1, by.x = region, by.y = Country.or.Area, all.x = T)
world_map
world_map$region = tolower(world_map$region)
Q1p1$Country.or.Area = tolower(Q1p1$Country.or.Area)
merge(world_map,Q1p1, by.x = region, by.y = Country.or.Area, all.x = T)
world_map$region = tolower(world_map$region)
countryIceCream = merge(world_map,Q1p1, by.x = region, by.y = Country.or.Area, all.x = T)
countryIceCream
glimpse(world_map)
countryIceCream = merge(world_map,Q1p1, by.x = region, by.y = Country.or.Area)
countryIceCream = merge(world_map,Q1p1, by.x = region, by.y = Country.or.Area)
countryIceCream = merge(Q1p1, world_map, by.y = region, by.x = Country.or.Area)
countryIceCream = merge(Q1p1, world_map, by.y = region, by.x = Country.or.Area)
countryIceCream = merge(Q1p1, world_map, by.y = region, by.x = Country.or.Area)
setwd("C:/Users/dan_9/Desktop/DSO 545/Final exam/Sample Final/Part 3")
library(ggmap)
library(maps)
library(ggplot2)
library(dplyr)
library(stringr)
shark = read.csv("shark.csv")
CountriesVictim = shark %>% group_by(Country) %>% summarise(count = n()) %>% arrange(desc(count)) %>% slice(1:5)
CountriesVictim$Country = tolower(CountriesVictim$Country)
world_map = map_data("world")
world_map$region = tolower(world_map$region)
victim_map = merge(world_map, CountriesVictim,
by.x ="region", by.y = "Country", all.x = T)
setwd("C:/Users/dan_9/Desktop/DSO 545/Final exam/FINAL")
countryIceCream = merge( world_map,Q1p1, by.x = "region", by.y = "Country.or.Area", all.x = T)
countryIceCream = arrange(countryIceCream, group, order)
glimpse(countryIceCream)
table(countryIceCream$averageSpending)
is.na(countryIceCream$averageSpending)
countryIceCream$averageSpending[is.na(countryIceCream$averageSpending)] = 0
table(countryIceCream$averageSpending)
glimpse(countryIceCream)
ggplot(countryIceCream, aes(x = long, y = lat, group = group, fill = averageSpending))+
geom_polygon(color = "black") +
scale_fill_continuous(low = "white", high = "red")
ggplot(countryIceCream, aes(x = long, y = lat, group = group, fill = averageSpending))+
geom_polygon(color = "black") +
scale_fill_continuous(low = "white", high = "red")+
theme(legend.title = "Million USD")+
ggtitle("Average")
ggplot(countryIceCream, aes(x = long, y = lat, group = group, fill = averageSpending))+
geom_polygon(color = "black") +
scale_fill_continuous(low = "white", high = "red")+
ggtitle("Average")
ggplot(countryIceCream, aes(x = long, y = lat, group = group, fill = averageSpending))+
geom_polygon(color = "black") +
scale_fill_continuous(low = "white", high = "red")+
ggtitle("Average Spending on Icecream for 1995 - 2012 \n (Nodata available for hite area)")
ggplot(countryIceCream, aes(x = long, y = lat, group = group, fill = averageSpending))+
geom_polygon(color = "black") +
scale_fill_continuous(low = "white", high = "red")+
ggtitle("Average Spending on Icecream for 1995 - 2012 \n (Nodata available for hite area)") +
scale_fill_manual(name = "a")
Q1p1 = icecream %>% group_by(Country.or.Area)  %>% summarise(MillionUSD = mean(USDinMillions))
Q1p1
countryIceCream$MillionUSD[is.na(countryIceCream$MillionUSD)] = 0
Q1p1 = icecream %>% group_by(Country.or.Area)  %>% summarise(MillionUSD = mean(USDinMillions))
Q1p1
world_map = map_data("world")
world_map$region = tolower(world_map$region)
Q1p1$Country.or.Area = tolower(Q1p1$Country.or.Area)
countryIceCream = merge( world_map,Q1p1, by.x = "region", by.y = "Country.or.Area", all.x = T)
countryIceCream = arrange(countryIceCream, group, order)
countryIceCream$MillionUSD[is.na(countryIceCream$MillionUSD)] = 0
table(countryIceCream$MillionUSD)
glimpse(countryIceCream)
ggplot(countryIceCream, aes(x = long, y = lat, group = group, fill = MillionUSD))+
geom_polygon(color = "black") +
scale_fill_continuous(low = "white", high = "red")+
ggtitle("Average Spending on Icecream for 1995 - 2012 \n (Nodata available for hite area)") +
ggplot(countryIceCream, aes(x = long, y = lat, group = group, fill = MillionUSD))+
geom_polygon(color = "black") +
scale_fill_continuous(low = "white", high = "red")+
ggtitle("Average Spending on Icecream for 1995 - 2012 \n (Nodata available for hite area)")
ggplot(countryIceCream, aes(x = long, y = lat, group = group, fill = MillionUSD))+
geom_polygon(color = "black") +
scale_fill_continuous(low = "white", high = "red")+
ggtitle("Average Spending on Icecream for 1995 - 2012 \n (Nodata available for hite area)")
urlC2 = "http://en.wikipedia.org/wiki/Designated_Player_Rule"
urlC2
urlC2 = "http://en.wikipedia.org/wiki/Designated_Player_Rule"
tbl = urlC2 %>%
html() %>%
html_nodes(xpath = '//*[@id="mw-content-text"]/table[1]' ) %>%
html_table()
tbl
players = tbl[[1]]
players
glimpse(players)
colnames(players)[4]
colnames(players)[5]
colnames(players)[5] = "Compensation"
players
players = tbl[[1]]
glimpse(players)
players
players$Compensation
players$`2015 Guaranteed compensation [13]`
colnames(players)[5] = "Compensation"
players
players$Compensation
a = players$Compensation[1] =
a = players$Compensation[1]
a
str_replace_all(players$Compensation[1],"\\$","")
players$Compensation = str_replace_all(players$Compensation,"\\$","")
players$Compensation = str_replace_all(players$Compensation,"\\$","")
players$Compensation
players = tbl[[1]]
glimpse(players)
colnames(players)[5] = "Compensation"
players$Compensation = players %>% str_replace_all(Compensation,"\\$","") %>%
str_replace_all(Compensation,",","")
players = tbl[[1]]
players$Compensation =  str_replace_all(Compensation,"\\$","")
players$Compensation =  str_replace_all(players$Compensation,"\\$","")
players = tbl[[1]]
glimpse(players)
colnames(players)[5] = "Compensation"
players$Compensation =  str_replace_all(players$Compensation,"\\$","")
players$Compensation
players$Compensation =  str_replace_all(players$Compensation,"\\$","")
players$Compensation =  str_replace_all(Compensation,",","")
players$Compensation =  str_replace_all(players$Compensation,",","")
players$Compensation
glimpse(players)
players$Compensation = as.numeric(players$Compensation)
glimpse(players)
players$Compensation
C2Q2 = tbl_df(players)
C2Q2
players$`Current club`
colnames(players)[3]
colnames(players)[4] = "CurrentClub"
colnames(players)
NYLAplayers = players %>% filter(CurrentClub %in% c("LA Galaxy","New York City FC"))
NYLAplayers
NYLAplayers = players %>% filter(CurrentClub %in% c("LA Galaxy","New York City FC")) %>% arrange(desc(Compensation))
NYLAplayers
NYLAplayers
ggplot(NYLAplayers, aes(x = Compensation, y = reorder(Player,Compensation ))) + geom_point()
ggplot(NYLAplayers, aes(x = Compensation, y = reorder(Player,Compensation ))) + geom_point()+
xlab("Compensation (Millions)") +
ylab("")+
ggtitle("Top Compensated Players")
ggplot(NYLAplayers, aes(x = Compensation, y = reorder(Player,Compensation ))) + geom_point()+
xlab("Compensation (Millions)") +
ylab("")+
ggtitle("Top Compensated Players")+
scale_x_continuous(breaks = seq(2000000,7000000,1000000))
ggplot(NYLAplayers, aes(x = Compensation, y = reorder(Player,Compensation ))) + geom_point()+
xlab("Compensation (Millions)") +
ylab("")+
ggtitle("Top Compensated Players")+
scale_x_continuous(breaks = seq(2000000,6000000,1000000))
ggplot(NYLAplayers, aes(x = Compensation, y = reorder(Player,Compensation ))) + geom_point()+
xlab("Compensation (Millions)") +
ylab("")+
ggtitle("Top Compensated Players")+
scale_x_continuous(breaks = seq(2000000,6000000,1000000), labels =c("3", "4", "5", "6"))
ggplot(NYLAplayers, aes(x = Compensation, y = reorder(Player,Compensation ))) + geom_point()+
xlab("Compensation (Millions)") +
ylab("")+
ggtitle("Top Compensated Players")+
scale_x_continuous(breaks = seq(3000000,6000000,1000000), labels =c("3", "4", "5", "6"))
library(stringr)
fileName <- "friends.txt"
text <- readChar(fileName, file.info(fileName)$size)
text
fileName
text
str_locate(text, pattern = "\n\n")
str_locate(text, pattern = "\\$")
str_locate_all(text, pattern = "\\$")
str_extract_all (text, pattern = "\\$")
str_locate_all(text, pattern = "^\\$\d[1234567890]$")
str_locate_all(text, pattern = "^\\$\\d[1234567890]$")
str_locate_all(text, pattern = "^\\$\\d[1234567890]$")
text
str_locate_all(text, pattern = "^\\$[1234567890]$")
str_locate_all(text, pattern = "^\\$[0-9]")
str_locate_all(text, pattern = "^\\$")
text
str_locate_all(text, pattern = "^\\$")
str_locate_all(text, pattern = "a$")
str_locate_all(text, pattern = "a")
str_locate_all(text, pattern = "\\$")
str_locate_all(text, pattern = "\\$[0-9]?")
str_locate_all(text, pattern = "\\$[0-9]?*")
str_locate_all(text, pattern = "\\$[0-9]*")
str_extract_all (text, pattern = "\\$")
str_extract_all (text, pattern = "\\$[0-9]*")
Money = str_extract_all (text, pattern = "\\$[0-9]*")
Money
total = Money[[1]]
total
total = sum(Money[[1]])
total = sum(as.numeric(Money[[1]])
total
MoneyNoDollarSign = str_replace(Money[[1]], "\\$","")
MoneyNoDollarSign
MoneyNoDollarSign = as.numeric(str_replace(Money[[1]], "\\$",""))
total = sum(MoneyNoDollarSign)
total
total
ggplot(countryIceCream, aes(x = long, y = lat, group = group, fill = MillionUSD))+
geom_polygon(color = "black") +
scale_fill_continuous(low = "white", high = "red")+
ggtitle("Average Spending on Icecream for 1995 - 2012 \n (Nodata available for hite area)") +
scale_fill_discrete(name = "hello")
ggplot(countryIceCream, aes(x = long, y = lat, group = group, fill = MillionUSD))+
geom_polygon(color = "black") +
scale_fill_continuous(low = "white", high = "red")+
ggtitle("Average Spending on Icecream for 1995 - 2012 \n (Nodata available for hite area)")
ggplot(countryIceCream, aes(x = long, y = lat, group = group, fill = MillionUSD))+
geom_polygon(color = "black") +
scale_fill_continuous(low = "white", high = "red", name = "hello")+
ggtitle("Average Spending on Icecream for 1995 - 2012 \n (Nodata available for hite area)")
ggplot(countryIceCream, aes(x = long, y = lat, group = group, fill = MillionUSD))+
geom_polygon(color = "black") +
scale_fill_continuous(low = "white", high = "red", name = "Million USD")+
ggtitle("Average Spending on Icecream for 1995 - 2012 \n (Nodata available for hite area)")
players = tbl[[1]]
players
players
C2Q2
View(C2Q2)
NYLAplayers
total
ggplot(NYLAplayers, aes(x = Compensation, y = reorder(Player,Compensation ))) + geom_point()+
xlab("Compensation (Millions)") +
ylab("")+
ggtitle("Top Compensated Players")+
scale_x_continuous(breaks = seq(3000000,6000000,1000000), labels =c("3", "4", "5", "6"))
